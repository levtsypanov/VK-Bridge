{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","header","mode","before","photo_200","src","description","city","title","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","persik","alt","App","useState","activePanel","setActivePanel","setUser","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","eruda","init","console","log","window","location","search","replace","ReactDOM","render","getElementById"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,oC,qmBCmD5BC,EAnCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,kBAAC,IAAD,wBACCE,GACD,kBAAC,IAAD,CAAOC,OAAQ,kBAAC,IAAD,CAAQC,KAAK,aAAb,qCACd,kBAAC,IAAD,CACCC,OAAQH,EAAYI,UAAY,kBAAC,IAAD,CAAQC,IAAKL,EAAYI,YAAe,KACxEE,YAAaN,EAAYO,MAAQP,EAAYO,KAAKC,MAAQR,EAAYO,KAAKC,MAAQ,IAFpF,UAIKR,EAAYS,WAJjB,YAI+BT,EAAYU,aAG5C,kBAAC,IAAD,CAAOT,OAAQ,kBAAC,IAAD,CAAQC,KAAK,aAAb,uBACd,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQS,KAAK,KAAKC,MAAM,IAAIC,QAASd,EAAIe,UAAQ,UAAjD,kC,sECZEC,EAASC,cAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,QAAD,CAAOpB,GAAIoB,EAAMpB,IAChB,kBAAC,cAAD,CACCqB,KAAM,kBAAC,oBAAD,CAAmBN,QAASK,EAAMnB,GAAIe,UAAQ,QAClDC,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,SAAShB,IAAKiB,IAAQC,IAAI,qBCgB5BC,G,OA/BH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVzB,EAFU,KAEG4B,EAFH,KAIjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECL,EAAQK,GAFT,4CARe,sBACfF,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAYfQ,KACE,IAEH,IAAM/C,EAAK,SAAAgD,GACVpB,EAAeoB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAMxB,YAAaA,GAClB,kBAAC,EAAD,CAAM5B,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,OC7B3BgC,IAAOC,KAAK,gBAGZmB,IAAMC,OAENC,QAAQC,IAAIC,OAAOC,SAASC,OAAOC,QAAQ,IAAK,KAChD3B,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KAChCgB,QAAQC,IAAIlB,GACZiB,QAAQC,IAAIjB,MAGhBsB,IAASC,OAAO,kBAAC,EAAD,MAASrB,SAASsB,eAAe,W","file":"static/js/main.aebfbebe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","// Инструменты\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// VKUI\nimport {Panel, PanelHeader,} from '@vkontakte/vkui';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\n// Icons\n// import Icon12Fire from '@vkontakte/icons/dist/12/fire';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>VK Bridge 2.0.3</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;","// Инструменты\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// VKUI\nimport { platform, IOS } from '@vkontakte/vkui';\nimport {Panel,PanelHeader,PanelHeaderButton,} from '@vkontakte/vkui/dist';\n\n// Icons\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n// CSS\nimport './Persik.css';\n\n// Other\nimport persik from '../img/persik.png';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","// Инструменты\nimport React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\n\n// VKUI\nimport View from '@vkontakte/vkui/dist/components/View/View';\n\n// Panels\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\n// CSS\nimport '@vkontakte/vkui/dist/vkui.css';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","// Инструменты\nimport 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport eruda from 'eruda';\n// Panels\nimport App from './App';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n// Init eruda\neruda.init()\n\nconsole.log(window.location.search.replace('?', ''))\nbridge.subscribe(({ detail: { type, data }}) => {\n    console.log(type)\n    console.log(data)\n})\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}